spring.application.name=${APP_NAME:koi-fish-veterinary-service-center}
spring.config.import=optional:file:.env[.properties]
## define logging pattern & logging level
logging.pattern.console=${LOG_PATTERN_CONSOLE:%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n}
logging.level.org.springframework.security = ${SPRING_SECURITY_LOG_LEVEL:trace}
## print all log levels:  trace, debug, error, info, off, warn


backend.domain=http://3.0.21.248:8080
frontend.domain=http://koi-fish-veterinary-interface.s3-website-ap-southeast-1.amazonaws.com

## config database server
spring.datasource.url=jdbc:mysql://${DATABASE_HOST:koi-fish-veterinary-service.ctsq8w4mwdt4.ap-southeast-1.rds.amazonaws.com}:${DATABASE_PORT:3306}/${DATABASE_NAME:koi_fish_veterinary_service}
spring.datasource.username=${DATABASE_USERNAME:koifishftf}
spring.datasource.password=${DATABASE_PASSWORD:koifishftf}

#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.show_sql=${HIBERNATE_FORMAT_SQL:true}
spring.jpa.properties.hibernate.dialect=${HIBERNATE_DIALECT:org.hibernate.dialect.MySQLDialect}

# application-production.properties (ho?c application.yml)
jwt.signer=${SIGNER_KEY}
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jackson.default-property-inclusion=non_null


# VNPay config
vnpay.tmn_code=IZ54HBXQ
vnpay.hash_secret=DQYH76UTPI9NGA7TBELLY71Z7284YVS6
vnpay.api_url=https://sandbox.vnpayment.vn/paymentv2/vpcpay.html
vnpay.return_url=${backend.domain}/api/v1/payments/vnpay-notify
spring.security.oauth2.client.registration.google.client-id=${CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri=${backend.domain}/login/oauth2/code/google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
# config email: SMTP AWS
sender.email=koifish.ftf@gmail.com
sender.name=Koi Fish
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=koifish.ftf@gmail.com
spring.mail.password=rikaoeiwseshtayw
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
# Upload & Download config
upload.path=src/main/resources/static/files
spring.web.resources.static-locations=classpath:/static/,file:/path/to/external/files/
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE



